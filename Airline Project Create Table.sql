CREATE TABLE AIRLINE(
AirlineID		INT				NOT NULL IDENTITY(540,5),
CompanyName		CHAR(50)		NOT NULL,
Wing			CHAR(50)		NOT NULL,
CONSTRAINT		AIRLINE_PK		PRIMARY KEY(AirlineID)
);

CREATE TABLE AIRPLANE(
AirplaneID			INT					NOT NULL IDENTITY(3000,1),
AirplaneModel		CHAR(45)			NOT NULL,
Manufacturer		CHAR(45)			NOT NULL,
SeatingCapacity		INT					NOT NULL,
AirlineID			INT					NOT NULL,
CONSTRAINT			AIRPLANE_PK			PRIMARY KEY(AirplaneID),
CONSTRAINT			AIRPLANE_AIRLINE_FK	FOREIGN KEY(AirlineID)
REFERENCES  AIRLINE(AirlineID) ON UPDATE CASCADE

);

CREATE TABLE AIRPORT(
AirportID		INT				NOT NULL IDENTITY(200,10),
City			CHAR(50)		NOT NULL,		
State			CHAR(45)		NOT NULL,
PhoneNumber		CHAR(15)		NOT NULL,
Country			CHAR(45)		NOT NULL,
AirportCode		CHAR(3)			NOT NULL,
CONSTRAINT		AIRPORT_PK		PRIMARY KEY(AirportID)
);


CREATE TABLE CUSTOMER(
CustomerID		INT				NOT NULL IDENTITY(1,1),
StreetAddress	CHAR(45)		NOT NULL,
FirstName		CHAR(45)		NOT NULL,
BirthDate		DATE			NULL,
City			CHAR(30)		NOT NULL,
State			CHAR(2)			NOT NULL,
ZipCode			INT				NOT NULL,
MiddleName		CHAR(45)		NULL,
LastName		CHAR(45)		NOT NULL,
CONSTRAINT		CUSTOMER_PK		PRIMARY KEY(CustomerID)
);

CREATE TABLE CHECKIN(
CheckInID			INT				NOT NULL IDENTITY(100,5),
ArrivalTime			TIME			NULL,
DepartureTime		TIME			NULL,
Itinerary			CHAR(45)		NOT NULL,
CheckInDate			DATE			NULL,
CheckInTime			TIME			NULL,
CONSTRAINT			CHECKIN_PK		PRIMARY KEY(CheckInID)
);

CREATE TABLE FLIGHT(
FlightID				INT				NOT NULL	IDENTITY(400,5),
FlightNumber			INT				NOT NULL,
FlightDepartureDate		DATE			NULL,
FlightDepartureTime		TIME			NULL,
FlightArrivalDate		DATE			NULL,
FlightArrivalTime		TIME			NULL,
FlightType				CHAR(45)		NOT NULL,
Terminal				CHAR(10)		NOT NULL,
Gate					CHAR(10)		NOT NULL,
DepartingAirportID		INT				NOT NULL,
AirplaneID				INT				NOT NULL,
ArrivingAirportID		INT				NOT NULL,
CONSTRAINT				FLIGHT_PK		PRIMARY KEY(FlightID),
CONSTRAINT				FLIGHT_DEPARTINGAIRPORT_FK FOREIGN KEY(DepartingAirportID)
REFERENCES AIRPORT(AirportID) ON UPDATE CASCADE,
CONSTRAINT				FLIGHT_ARRIVINGAIRPORT_FK FOREIGN KEY(ArrivingAirportID)
REFERENCES AIRPORT(AirportID) ON DELETE NO ACTION
);


CREATE TABLE LUGGAGE(
LuggageID				INT			NOT NULL	IDENTITY(300,5),
LuggageWeight			DECIMAL		NOT NULL,
BaggageFee				MONEY		NULL,
BaggageClaim			CHAR(50)	NOT NULL,
CustomerID				INT			NOT NULL,
CONSTRAINT			LUGGAGE_PK		PRIMARY KEY(LuggageID),
CONSTRAINT			LUGGAGE_CUSTOMER_FK	FOREIGN KEY(CustomerID)
REFERENCES  CUSTOMER(CustomerID) ON UPDATE CASCADE
);

CREATE TABLE SEATS(
SeatID		INT			NOT NULL	IDENTITY(10,1),
Class		CHAR(25)	NOT NULL,
Row			CHAR(5)		NOT NULL,
Number		INT			NOT NULL,
Floor		INT			NOT NULL,
AirplaneID	INT			NOT NULL,
CONSTRAINT			SEAT_PK		PRIMARY KEY(SeatID),
CONSTRAINT			SEAT_AIRPLANE_FK	FOREIGN KEY(AirplaneID)
REFERENCES  AIRPLANE(AirplaneID) ON UPDATE CASCADE
);


CREATE TABLE TICKETS(
TicketID		INT			NOT NULL	IDENTITY(4000,1),
OrderNumber		CHAR(20)	NOT NULL,
FlightName		CHAR(45)	NOT NULL,
SeatClass		CHAR(45)	NOT NULL,
Price			MONEY		NULL,
PassengerName	CHAR(50)	NOT NULL,
CustomerID		INT			NOT NULL,
CheckInID		INT			NOT NULL,
CONSTRAINT			TICKETS_PK		PRIMARY KEY(TicketID),
CONSTRAINT			TICKETS_CUSTOMER_FK	FOREIGN KEY(CustomerID)
REFERENCES  CUSTOMER(CustomerID) ON UPDATE CASCADE,
CONSTRAINT			TICKETS_CHECKIN_FK	FOREIGN KEY(CheckInID)
REFERENCES  CHECKIN(CheckInID) ON UPDATE CASCADE
);




CREATE TABLE FLIGHTCHECKIN(
FlightID		INT		NOT NULL,
CONSTRAINT	FLIGHTCHECKIN_PK   PRIMARY KEY(FlightID, CheckInID),
CONSTRAINT FLICHK_FLIGHT_FK FOREIGN KEY(FlightID)
REFERENCES FLIGHT(FlightID) ON UPDATE NO ACTION ON DELETE CASCADE,
CheckInID		INT		NOT NULL,
CONSTRAINT FLICHK_CHKIN_FK FOREIGN KEY(CheckInID)
REFERENCES CHECKIN(CheckInID) ON UPDATE NO ACTION ON DELETE CASCADE,
);

CREATE TABLE FLIGHTTICKET(
FlightID		INT		NOT NULL,
CONSTRAINT FLIGHTTICKET_PK PRIMARY KEY(FlightID, TicketID),
CONSTRAINT FLITIK_FLIGHT_FK FOREIGN KEY(FlightID)
REFERENCES FLIGHT(FlightID) ON UPDATE NO ACTION ON DELETE CASCADE,
TicketID		INT		NOT NULL,
CONSTRAINT FLITIK_TICKET_FK FOREIGN KEY(TicketID)
REFERENCES TICKETS(TicketID) ON UPDATE NO ACTION ON DELETE CASCADE
);
